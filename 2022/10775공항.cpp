#include <iostream>
using namespace std;
int G, P, g;
int parent[100001];
int find(int x) {
    if (x == parent[x])
        return x;
    return parent[x] = find(parent[x]);
}


//��Ʈ����� �ǹ�: 


//ó���� �� ����Ʈ�� �ڽ��� �θ�� ������

//ó�� g�� ����Ʈ���� ���� �� �ִ� �װ��Ⱑ �Է��� ������, g�� ����Ʈ�� ��ġ�Ѵٰ� ��������

int main() {
    int cnt = 0;
    cin >> G >> P;
    for (int i = 1; i <= G; i++)
        parent[i] = i;
    for (int i = 1; i <= P; i++) {
        cin >> g;
        if (!find(g))
            break;
        else {                  //���� �װ��⸦ ���� ��ġ�� �� �ִٸ�, ���� ���� ��ȣ�� ����Ʈ��
            cnt++;              //���� �װ��⸦ �ΰ�, �� ����Ʈ -1�� ����Ʈ����ģ��.
            parent[find(g)] = find(find(g) - 1);
            //find(g)�� �Է����� ���� g�� ����Ʈ���� ���� �� �ִ� ����Ⱑ 
            //����� ��� ����Ʈ���� ���� �� �ִ� �� �����Ѵ�( ū �� ���� ä��⿡ 1�� ä�� �� ����
            //-1��.

// g+1�� ���Ĵ� ���� ������� �ʾƵ� �ȴ�.
//  g/  g+1,g+2,.......    ���� g+2�� ���´ٰ� ����, ������ g+2 ä��� g+1, g+1 ä��� g�� �´�.
//���� g�� ������ �и� ��ŭ ������Ե� (union)




        }
    }
    cout << cnt;
}